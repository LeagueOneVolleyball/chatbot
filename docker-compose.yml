version: '3.8'

services:
  # MCPO Tools Server (Multiple MCP Servers via MCPO)
  mcpo-tools:
    build:
      context: .
      dockerfile: Dockerfile.mcpo
    ports:
      - "8001:8001"
    environment:
      # Snowflake Configuration
      - SNOWFLAKE_ACCOUNT=${SNOWFLAKE_ACCOUNT}
      - SNOWFLAKE_USER=${SNOWFLAKE_USER}
      - SNOWFLAKE_PRIVATE_KEY_PATH=/keys/comp_role_key.p8
      - SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=${SNOWFLAKE_PRIVATE_KEY_PASSPHRASE}
      - SNOWFLAKE_WAREHOUSE=${SNOWFLAKE_WAREHOUSE:-COMP_ROLE_WH}
      - SNOWFLAKE_DATABASE=${SNOWFLAKE_DATABASE:-SILVER_DB}
      - SNOWFLAKE_SCHEMA=${SNOWFLAKE_SCHEMA:-PUBLIC}
      - SNOWFLAKE_ROLE=${SNOWFLAKE_ROLE:-COMP_ROLE}
      # MCPO Configuration
      - MCPO_PORT=8001
      - MCPO_HOST=0.0.0.0
      - MCPO_API_KEY=${MCPO_SNOWFLAKE_API_KEY:-snowflake-secure-key-2024}
    volumes:
      - /Users/kevin/dev/keys:/keys:ro
      - ./logs:/var/log/mcpo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - openwebui-network
    command: >
      sh -c "
        echo 'Starting MCPO Tools Server on port 8001 with API key security...' &&
        uvx mcpo --host 0.0.0.0 --port 8001 --api-key '${MCPO_SNOWFLAKE_API_KEY:-snowflake-secure-key-2024}' -- uvx mcp-snowflake
      "

  # OpenWebUI with MCPO integration
  openwebui:
    build:
      context: .
      dockerfile: Dockerfile.openwebui
    ports:
      - "8080:8080"
    environment:
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL:-https://api.openai.com/v1}
      
      # WebUI Configuration
      - WEBUI_AUTH=${WEBUI_AUTH:-false}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - WEBUI_URL=${WEBUI_URL:-http://localhost:8080}
      
      # User Permissions - Enable tool access for regular users
      - USER_PERMISSIONS_WORKSPACE_TOOLS_ACCESS=true
      
      # MCPO Server URLs with API Keys
      - MCPO_SNOWFLAKE_URL=http://mcpo-tools:8001
      - MCPO_SNOWFLAKE_API_KEY=${MCPO_SNOWFLAKE_API_KEY:-snowflake-secure-key-2024}
      - MCPO_SERVERS=snowflake:http://mcpo-tools:8001
      
      # OpenWebUI Data
      - DATA_DIR=/app/backend/data
      - UPLOAD_DIR=/app/backend/data/uploads
    volumes:
      - openwebui_data:/app/backend/data
      - ./logs:/var/log/openwebui
      - ./config:/app/config:ro
    depends_on:
      mcpo-tools:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - openwebui-network

  # Future MCPO servers can be added here as separate services
  # mcpo-github:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.mcpo
  #   ports:
  #     - "8002:8002"
  #   environment:
  #     - GITHUB_TOKEN=${GITHUB_TOKEN}
  #     - MCPO_PORT=8002
  #     - MCPO_HOST=0.0.0.0
  #     - MCPO_API_KEY=${MCPO_GITHUB_API_KEY:-github-secure-key-2024}
  #   command: >
  #     sh -c "uvx mcpo --host 0.0.0.0 --port 8002 --api-key '${MCPO_GITHUB_API_KEY:-github-secure-key-2024}' -- uvx mcp-server-github"

volumes:
  openwebui_data:
    driver: local

networks:
  openwebui-network:
    driver: bridge 